// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraiseProvisions.Data;

namespace PraiseProvisions.Migrations
{
    [DbContext(typeof(PraiseProvisionDbContext))]
    [Migration("20181108185053_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PraiseProvisions.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new { ID = 1, Address = "1234 Fake St. Seattle, WA 98122", Description = "Brian's delicious comfort food, the dumplings are A+!", Name = "Dough Zone" },
                        new { ID = 2, Address = "1234 Fake St. Seattle, WA 98122", Description = "Top fried chicken in Seattle according to Jeff Weng!", Name = "Karaage Setsuna" },
                        new { ID = 3, Address = "1234 Fake St. Seattle, WA 98122", Description = "ALL YOU CAN EAT MEAT. ALL DAY, EVERYDAY.", Name = "Novilho's Brazilian Steakhouse" }
                    );
                });

            modelBuilder.Entity("PraiseProvisions.Models.UserFavorite", b =>
                {
                    b.Property<int>("RestaurantID");

                    b.Property<int>("UserProfileID");

                    b.HasKey("RestaurantID", "UserProfileID");

                    b.HasIndex("UserProfileID");

                    b.ToTable("UserFavorites");

                    b.HasData(
                        new { RestaurantID = 3, UserProfileID = 1 },
                        new { RestaurantID = 2, UserProfileID = 1 },
                        new { RestaurantID = 1, UserProfileID = 2 }
                    );
                });

            modelBuilder.Entity("PraiseProvisions.Models.UserProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fullName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new { ID = 1, fullName = "Jimmy Nguyen" },
                        new { ID = 2, fullName = "Brian Nelson" }
                    );
                });

            modelBuilder.Entity("PraiseProvisions.Models.UserFavorite", b =>
                {
                    b.HasOne("PraiseProvisions.Models.Restaurant", "Restaurant")
                        .WithMany("UserFavorites")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PraiseProvisions.Models.UserProfile", "UserProfile")
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
